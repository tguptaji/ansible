====================================
NOTE: Ensure Elaastic IP is created and allocated to Kubernetes Master Server.
====================================
Run these below commands on all 3 servers ( master, 2 worker nodes)

swapoff -a
apt-get install -y apt-transport-https ca-certificates software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository "deb https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
apt-get update
apt-get install -y docker-ce

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

apt-get update
apt-get install -y kubelet kubeadm kubectl >/dev/null
apt-mark hold kubelet kubeadm kubectl
====================================
Run the below command only on Master
kubeadm init
====================================
switch to normal user
exit

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
udo chown $(id -u):$(id -g) $HOME/.kube/config


For weave Net Network policy deploy:

sudo sysctl net.bridge.bridge-nf-call-iptables=1
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
====================================
Run the below command on your worker nodes:
kubeadm join ....
====================================
Come back to Master:

kubectl get pods
kubectl get pods --namespace kube-system
kubectl get nodes
kubectl get namespaces


sudo chown -R ubuntu:ubuntu /opt/
mkdir templates

vi pod.yaml
kubectl create -f pod.yaml
kubectl get pods
kubectl get pods -o wide
kubectl get nodes
====================================
